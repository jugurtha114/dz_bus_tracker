/// lib/domain/entities/notification_entity.dart

import 'package:freezed_annotation/freezed_annotation.dart';

// Required part files for code generation
part 'notification_entity.freezed.dart';
part 'notification_entity.g.dart';
// CORRECTED: Added required part directives for build_runner
/// Represents the core Notification entity within the application domain.
///
/// Contains the details of a notification received or stored by the application.
/// Uses freezed for immutability and generated methods.
@freezed
class NotificationEntity with _$NotificationEntity {
  /// Creates a [NotificationEntity] instance.
  const factory NotificationEntity({
    /// A unique identifier for the notification.
    /// Could be generated locally (e.g., hashcode, timestamp) or from backend.
    required String id,

    /// The title of the notification. Optional.
    String? title,

    /// The main body text of the notification. Optional.
    String? body,

    /// The timestamp when the notification was received or created locally. Required.
    required DateTime receivedAt,

    /// Flag indicating whether the user has read/dismissed the notification.
    @Default(false) bool isRead,

    /// Optional data payload associated with the notification, used for navigation or actions.
    /// Stored as a map that can be JSON serialized.
    Map<String, dynamic>? payload,
  }) = _NotificationEntity;

  /// Creates a NotificationEntity instance from a JSON map.
  /// Delegates to the generated `_$NotificationEntityFromJson` function.
  factory NotificationEntity.fromJson(Map<String, dynamic> json) =>
      _$NotificationEntityFromJson(json);

  /// Private empty constructor required by freezed for implementing methods or getters.
  // const NotificationEntity._();

  /// Creates an empty NotificationEntity, useful for placeholders.
  factory NotificationEntity.empty() => NotificationEntity(
        id: '',
        receivedAt: DateTime.fromMillisecondsSinceEpoch(0),
      );

   // Note: equals, hashCode, toString, and copyWith are generated by freezed.
}
